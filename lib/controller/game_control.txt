import 'dart:ffi';

import 'package:flutter/cupertino.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'dart:math' as math;

abstract class GameControl {
  void setGameOver();
  void updateData();
  void restart();
}

class Game implements GameControl {
  bool gameOver = false;

  int seconds = 60;
  int level = 1;
  int bestLevel = 1;

  int crossAxisCount = 3;

  int diffIndex;
  Color diffColor;
  Color color;

  void updateData() async {
    this.crossAxisCount = math.min(10, ((_level + 5) / 2).floor());

    final rand = math.Random();
    this.diffIndex = rand.nextInt(crossAxisCount * crossAxisCount);
    this.color = Color((math.Random().nextDouble() * 0xFFFFFF).toInt() << 0)
        .withOpacity(1);
    this.diffColor = color.withOpacity(math.min(0.95, 0.5 + level / 100));

    var prefs = await SharedPreferences.getInstance();
    var bestLevel = prefs.getInt('BEST') ?? 1;

    if (bestLevel < level) {
      await prefs.setInt('BEST', level);
      bestLevel = level;
    }

    void setGameOver() {

      setState((){

      })
    }

    void restart() {
      gameOver = false;
      level = 1;
      seconds = 60;

      updateData();
    }
  }
}
